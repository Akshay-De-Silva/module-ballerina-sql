name: Publish release

on: [workflow_dispatch, repository_dispatch]

jobs:
  publish-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set version env variable
        run: echo ::set-env name=VERSION::$((grep -w "version" | cut -d= -f2) < gradle.properties | cut -d- -f1)
      - name : Pre release depenency version update
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          echo "Version: ${VERSION}"
          git config user.name ${{ secrets.BALLERINA_BOT_USERNAME }}
          git config user.email ${{ secrets.BALLERINA_BOT_EMAIL }}
          git checkout -b release-${VERSION}
          sed -i 's/ballerinaLangVersion=\(.*\)-SNAPSHOT/ballerinaLangVersion=\1/g' gradle.properties
          sed -i 's/stdlib\(.*\)=\(.*\)-SNAPSHOT/stdlib\1=\2/g' gradle.properties
          git add gradle.properties
          git commit -m "Move dependencies to stable version" || echo "No changes to commit"
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Publish artifact
        env:
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_ACCESS_TOKEN }}
          packageUser: ${{ github.actor }}
          packagePAT: ${{ secrets.BALLERINA_STDLIB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          ./gradlew release -Prelease.useAutomaticVersion=true
      - name: Create Github release from the release tag
        run: |
          curl --request POST 'https://api.github.com/repos/ballerina-platform/module-ballerina-sql/releases' \
          --header 'Accept: application/vnd.github.v3+json' \
          --header 'Authorization: Bearer ${{ secrets.BALLERINA_BOT_TOKEN }}' \
          --header 'Content-Type: application/json' \
          --data-raw '{
              "tag_name": "v'"$VERSION"'",
              "name": "module-ballerina-sql-v'"$VERSION"'"
          }'
# This may be not needed for manual release of only one stdlib. To be discussed further
#      - name : Post release dependency version update
#        run: |
#          chmod +x build-config/release/post-release-dependency-bump.sh
#          bash build-config/release/post-release-dependency-bump.sh
#          git add gradle.properties
#          git commit -m "Post release dependency bump" || echo "No changes to commit"
      - name: Post release PR
        run: |
          git checkout master
          git merge release-${VERSION}
          git push origin master
